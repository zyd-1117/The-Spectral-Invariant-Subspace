#include <stdio.h>
#include <string.h>

int sb[256]={
0x11,0x10,0x51,0x50,0xB4,0x30,0xF4,0x70,0x59,0x58,0x19,0x18,0xFC,0x78,0xBC,0x38,
0x01,0x00,0x13,0x12,0xA4,0x20,0xB6,0x32,0x0B,0x0A,0x1B,0x1A,0xAE,0x2A,0xBE,0x3A,
0x15,0x31,0x55,0x71,0xB5,0x35,0xF5,0x75,0x5D,0x79,0x1D,0x39,0xFD,0x7D,0xBD,0x3D,
0x05,0x21,0x17,0x33,0xA5,0x25,0xB7,0x37,0x0F,0x2B,0x1F,0x3B,0xAF,0x2F,0xBF,0x3F,
0x4B,0x4A,0x5B,0x5A,0xEE,0x6A,0xFE,0x7A,0x49,0x48,0x41,0x40,0xEC,0x68,0xE4,0x60,
0x03,0x02,0x53,0x52,0xA6,0x22,0xF6,0x72,0x09,0x08,0x43,0x42,0xAC,0x28,0xE6,0x62,
0x4F,0x6B,0x5F,0x7B,0xEF,0x6F,0xFF,0x7F,0x4D,0x69,0x45,0x61,0xED,0x6D,0xE5,0x65,
0x07,0x23,0x57,0x73,0xA7,0x27,0xF7,0x77,0x0D,0x29,0x47,0x63,0xAD,0x2D,0xE7,0x67,
0x95,0xB0,0xD5,0xF0,0x94,0x90,0xD4,0xD0,0xDD,0xF8,0x9D,0xB8,0xDC,0xD8,0x9C,0x98,
0x85,0xA0,0x97,0xB2,0x84,0x80,0x96,0x92,0x8F,0xAA,0x9F,0xBA,0x8E,0x8A,0x9E,0x9A,
0x91,0xB1,0xD1,0xF1,0x14,0x34,0x54,0x74,0xD9,0xF9,0x99,0xB9,0x5C,0x7C,0x1C,0x3C,
0x81,0xA1,0x93,0xB3,0x04,0x24,0x16,0x36,0x8B,0xAB,0x9B,0xBB,0x0E,0x2E,0x1E,0x3E,
0xCF,0xEA,0xDF,0xFA,0xCE,0xCA,0xDE,0xDA,0xCD,0xE8,0xC5,0xE0,0xCC,0xC8,0xC4,0xC0,
0x87,0xA2,0xD7,0xF2,0x86,0x82,0xD6,0xD2,0x8D,0xA8,0xC7,0xE2,0x8C,0x88,0xC6,0xC2,
0xCB,0xEB,0xDB,0xFB,0x4E,0x6E,0x5E,0x7E,0xC9,0xE9,0xC1,0xE1,0x4C,0x6C,0x44,0x64,
0x83,0xA3,0xD3,0xF3,0x06,0x26,0x56,0x76,0x89,0xA9,0xC3,0xE3,0x0C,0x2C,0x46,0x66
};  //modori128ssb0
//int sb[256]={
//0x88,0x8A,0x4B,0xCB,0xAC,0xAE,0x6F,0xEF,0x80,0x82,0x43,0xC3,0x94,0x96,0x57,0xD7,
//0xA8,0xAA,0x6B,0xEB,0x8C,0x8E,0x4F,0xCF,0x98,0x9A,0x5B,0xDB,0x9C,0x9E,0x5F,0xDF,
//0xB4,0xB6,0x77,0xF7,0xA4,0xA6,0x67,0xE7,0x90,0x92,0x53,0xD3,0x84,0x86,0x47,0xC7,
//0xBC,0xBE,0x7F,0xFF,0xA0,0xA2,0x63,0xE3,0xB8,0xBA,0x7B,0xFB,0xB0,0xB2,0x73,0xF3,
//0xCA,0xC8,0x4A,0x0A,0xEE,0xEC,0x6E,0x2E,0xC2,0xC0,0x42,0x02,0xD6,0xD4,0x56,0x16,
//0xEA,0xE8,0x6A,0x2A,0xCE,0xCC,0x4E,0x0E,0xDA,0xD8,0x5A,0x1A,0xDE,0xDC,0x5E,0x1E,
//0xF6,0xF4,0x76,0x36,0xE6,0xE4,0x66,0x26,0xD2,0xD0,0x52,0x12,0xC6,0xC4,0x46,0x06,
//0xFE,0xFC,0x7E,0x3E,0xE2,0xE0,0x62,0x22,0xFA,0xF8,0x7A,0x3A,0xF2,0xF0,0x72,0x32,
//0x08,0x89,0x09,0x8B,0x2C,0xAD,0x2D,0xAF,0x00,0x81,0x01,0x83,0x14,0x95,0x15,0x97,
//0x28,0xA9,0x29,0xAB,0x0C,0x8D,0x0D,0x8F,0x18,0x99,0x19,0x9B,0x1C,0x9D,0x1D,0x9F,
//0x34,0xB5,0x35,0xB7,0x24,0xA5,0x25,0xA7,0x10,0x91,0x11,0x93,0x04,0x85,0x05,0x87,
//0x3C,0xBD,0x3D,0xBF,0x20,0xA1,0x21,0xA3,0x38,0xB9,0x39,0xBB,0x30,0xB1,0x31,0xB3,
//0x49,0xC9,0x48,0x0B,0x6D,0xED,0x6C,0x2F,0x41,0xC1,0x40,0x03,0x55,0xD5,0x54,0x17,
//0x69,0xE9,0x68,0x2B,0x4D,0xCD,0x4C,0x0F,0x59,0xD9,0x58,0x1B,0x5D,0xDD,0x5C,0x1F,
//0x75,0xF5,0x74,0x37,0x65,0xE5,0x64,0x27,0x51,0xD1,0x50,0x13,0x45,0xC5,0x44,0x07,
//0x7D,0xFD,0x7C,0x3F,0x61,0xE1,0x60,0x23,0x79,0xF9,0x78,0x3B,0x71,0xF1,0x70,0x33
//};  //modori128ssb1
//int sb[256]={
//0x44,0xC3,0x47,0x43,0x40,0xC0,0xC2,0x42,0x54,0xD3,0x57,0x53,0x50,0xD0,0xD2,0x52,
//0x3C,0xBB,0x3F,0x3B,0x38,0xB8,0xBA,0x3A,0x7C,0xFB,0x7F,0x7B,0x78,0xF8,0xFA,0x7A,
//0x74,0xF3,0x77,0x73,0x70,0xF0,0xF2,0x72,0x64,0xE3,0x67,0x63,0x60,0xE0,0xE2,0x62,
//0x34,0xB3,0x37,0x33,0x30,0xB0,0xB2,0x32,0x14,0x93,0x17,0x13,0x10,0x90,0x92,0x12,
//0x04,0x83,0x07,0x03,0x00,0x80,0x82,0x02,0x4C,0xCB,0x4F,0x4B,0x48,0xC8,0xCA,0x4A,
//0x0C,0x8B,0x0F,0x0B,0x08,0x88,0x8A,0x0A,0x5C,0xDB,0x5F,0x5B,0x58,0xD8,0xDA,0x5A,
//0x2C,0xAB,0x2F,0x2B,0x28,0xA8,0xAA,0x2A,0x6C,0xEB,0x6F,0x6B,0x68,0xE8,0xEA,0x6A,
//0x24,0xA3,0x27,0x23,0x20,0xA0,0xA2,0x22,0x1C,0x9B,0x1F,0x1B,0x18,0x98,0x9A,0x1A,
//0x45,0xC7,0x46,0x41,0xC4,0xC5,0xC6,0xC1,0x55,0xD7,0x56,0x51,0xD4,0xD5,0xD6,0xD1,
//0x3D,0xBF,0x3E,0x39,0xBC,0xBD,0xBE,0xB9,0x7D,0xFF,0x7E,0x79,0xFC,0xFD,0xFE,0xF9,
//0x75,0xF7,0x76,0x71,0xF4,0xF5,0xF6,0xF1,0x65,0xE7,0x66,0x61,0xE4,0xE5,0xE6,0xE1,
//0x35,0xB7,0x36,0x31,0xB4,0xB5,0xB6,0xB1,0x15,0x97,0x16,0x11,0x94,0x95,0x96,0x91,
//0x05,0x87,0x06,0x01,0x84,0x85,0x86,0x81,0x4D,0xCF,0x4E,0x49,0xCC,0xCD,0xCE,0xC9,
//0x0D,0x8F,0x0E,0x09,0x8C,0x8D,0x8E,0x89,0x5D,0xDF,0x5E,0x59,0xDC,0xDD,0xDE,0xD9,
//0x2D,0xAF,0x2E,0x29,0xAC,0xAD,0xAE,0xA9,0x6D,0xEF,0x6E,0x69,0xEC,0xED,0xEE,0xE9,
//0x25,0xA7,0x26,0x21,0xA4,0xA5,0xA6,0xA1,0x1D,0x9F,0x1E,0x19,0x9C,0x9D,0x9E,0x99
//};  //modori128ssb2
//int sb[256]={
//0x22,0x2B,0x20,0x29,0xA2,0xAB,0x26,0x2F,0x4B,0x0B,0x49,0x09,0xCB,0x8B,0x4F,0x0F,
//0xB2,0xBB,0x34,0x3D,0x32,0x3B,0x36,0x3F,0xDB,0x9B,0x5D,0x1D,0x5B,0x1B,0x5F,0x1F,
//0x02,0x43,0x00,0x41,0x82,0xC3,0x06,0x47,0x42,0x03,0x40,0x01,0xC2,0x83,0x46,0x07,
//0x92,0xD3,0x14,0x55,0x12,0x53,0x16,0x57,0xD2,0x93,0x54,0x15,0x52,0x13,0x56,0x17,
//0x2A,0x23,0x28,0x21,0xAA,0xA3,0x2E,0x27,0x6B,0x0A,0x69,0x08,0xEB,0x8A,0x6F,0x0E,
//0xBA,0xB3,0x3C,0x35,0x3A,0x33,0x3E,0x37,0xFB,0x9A,0x7D,0x1C,0x7B,0x1A,0x7F,0x1E,
//0x62,0x63,0x60,0x61,0xE2,0xE3,0x66,0x67,0x6A,0x4A,0x68,0x48,0xEA,0xCA,0x6E,0x4E,
//0xF2,0xF3,0x74,0x75,0x72,0x73,0x76,0x77,0xFA,0xDA,0x7C,0x5C,0x7A,0x5A,0x7E,0x5E,
//0xB4,0xBD,0x24,0x2D,0xB6,0xBF,0xA6,0xAF,0xDD,0x9D,0x4D,0x0D,0xDF,0x9F,0xCF,0x8F,
//0xB0,0xB9,0x30,0x39,0xA0,0xA9,0xA4,0xAD,0xD9,0x99,0x59,0x19,0xC9,0x89,0xCD,0x8D,
//0x94,0xD5,0x04,0x45,0x96,0xD7,0x86,0xC7,0xD4,0x95,0x44,0x05,0xD6,0x97,0xC6,0x87,
//0x90,0xD1,0x10,0x51,0x80,0xC1,0x84,0xC5,0xD0,0x91,0x50,0x11,0xC0,0x81,0xC4,0x85,
//0xBC,0xB5,0x2C,0x25,0xBE,0xB7,0xAE,0xA7,0xFD,0x9C,0x6D,0x0C,0xFF,0x9E,0xEF,0x8E,
//0xB8,0xB1,0x38,0x31,0xA8,0xA1,0xAC,0xA5,0xF9,0x98,0x79,0x18,0xE9,0x88,0xED,0x8C,
//0xF4,0xF5,0x64,0x65,0xF6,0xF7,0xE6,0xE7,0xFC,0xDC,0x6C,0x4C,0xFE,0xDE,0xEE,0xCE,
//0xF0,0xF1,0x70,0x71,0xE0,0xE1,0xE4,0xE5,0xF8,0xD8,0x78,0x58,0xE8,0xC8,0xEC,0xCC
//};  //modori128ssb3
//int sb[256]={
//0x65 ,0x4c ,0x6a ,0x42 ,0x4b ,0x63 ,0x43 ,0x6b ,0x55 ,0x75 ,0x5a ,0x7a ,0x53 ,0x73 ,0x5b ,0x7b ,
//0x35 ,0x8c ,0x3a ,0x81 ,0x89 ,0x33 ,0x80 ,0x3b ,0x95 ,0x25 ,0x98 ,0x2a ,0x90 ,0x23 ,0x99 ,0x2b ,
//0xe5 ,0xcc ,0xe8 ,0xc1 ,0xc9 ,0xe0 ,0xc0 ,0xe9 ,0xd5 ,0xf5 ,0xd8 ,0xf8 ,0xd0 ,0xf0 ,0xd9 ,0xf9 ,
//0xa5 ,0x1c ,0xa8 ,0x12 ,0x1b ,0xa0 ,0x13 ,0xa9 ,0x05 ,0xb5 ,0x0a ,0xb8 ,0x03 ,0xb0 ,0x0b ,0xb9 ,
//0x32 ,0x88 ,0x3c ,0x85 ,0x8d ,0x34 ,0x84 ,0x3d ,0x91 ,0x22 ,0x9c ,0x2c ,0x94 ,0x24 ,0x9d ,0x2d ,
//0x62 ,0x4a ,0x6c ,0x45 ,0x4d ,0x64 ,0x44 ,0x6d ,0x52 ,0x72 ,0x5c ,0x7c ,0x54 ,0x74 ,0x5d ,0x7d ,
//0xa1 ,0x1a ,0xac ,0x15 ,0x1d ,0xa4 ,0x14 ,0xad ,0x02 ,0xb1 ,0x0c ,0xbc ,0x04 ,0xb4 ,0x0d ,0xbd ,
//0xe1 ,0xc8 ,0xec ,0xc5 ,0xcd ,0xe4 ,0xc4 ,0xed ,0xd1 ,0xf1 ,0xdc ,0xfc ,0xd4 ,0xf4 ,0xdd ,0xfd ,
//0x36 ,0x8e ,0x38 ,0x82 ,0x8b ,0x30 ,0x83 ,0x39 ,0x96 ,0x26 ,0x9a ,0x28 ,0x93 ,0x20 ,0x9b ,0x29 ,
//0x66 ,0x4e ,0x68 ,0x41 ,0x49 ,0x60 ,0x40 ,0x69 ,0x56 ,0x76 ,0x58 ,0x78 ,0x50 ,0x70 ,0x59 ,0x79 ,
//0xa6 ,0x1e ,0xaa ,0x11 ,0x19 ,0xa3 ,0x10 ,0xab ,0x06 ,0xb6 ,0x08 ,0xba ,0x00 ,0xb3 ,0x09 ,0xbb ,
//0xe6 ,0xce ,0xea ,0xc2 ,0xcb ,0xe3 ,0xc3 ,0xeb ,0xd6 ,0xf6 ,0xda ,0xfa ,0xd3 ,0xf3 ,0xdb ,0xfb ,
//0x31 ,0x8a ,0x3e ,0x86 ,0x8f ,0x37 ,0x87 ,0x3f ,0x92 ,0x21 ,0x9e ,0x2e ,0x97 ,0x27 ,0x9f ,0x2f ,
//0x61 ,0x48 ,0x6e ,0x46 ,0x4f ,0x67 ,0x47 ,0x6f ,0x51 ,0x71 ,0x5e ,0x7e ,0x57 ,0x77 ,0x5f ,0x7f ,
//0xa2 ,0x18 ,0xae ,0x16 ,0x1f ,0xa7 ,0x17 ,0xaf ,0x01 ,0xb2 ,0x0e ,0xbe ,0x07 ,0xb7 ,0x0f ,0xbf ,
//0xe2 ,0xca ,0xee ,0xc6 ,0xcf ,0xe7 ,0xc7 ,0xef ,0xd2 ,0xf2 ,0xde ,0xfe ,0xd7 ,0xf7 ,0xdf ,0xff ,
//}; //skinny
//int sb[256]={
//0x20,0x00,0xB2,0x85,0x3B,0x35,0xA6,0xA4,0x30,0xE4,0x6A,0x2C,0xFF,0x59,0xE2,0x0E
//,0xF8,0x1E,0x7A,0x80,0x15,0xBD,0x3E,0xB1,0xE8,0xF3,0xA2,0xC2,0xDA,0x51,0x2A,0x10
//,0x21,0x01,0x23,0x78,0x5C,0x24,0x27,0xB5,0x37,0xC7,0x2B,0x1F,0xAE,0x0A,0x77,0x5F
//,0x6F,0x09,0x9D,0x81,0x04,0x5A,0x29,0xDC,0x39,0x9C,0x05,0x57,0x97,0x74,0x79,0x17
//,0x44,0xC6,0xE6,0xE9,0xDD,0x41,0xF2,0x8A,0x54,0xCA,0x6E,0x4A,0xE1,0xAD,0xB6,0x88
//,0x1C,0x98,0x7E,0xCE,0x63,0x49,0x3A,0x5D,0x0C,0xEF,0xF6,0x34,0x56,0x25,0x2E,0xD6
//,0x67,0x75,0x55,0x76,0xB8,0xD2,0x61,0xD9,0x71,0x8B,0xCD,0x0B,0x72,0x6C,0x31,0x4B
//,0x69,0xFD,0x7B,0x6D,0x60,0x3C,0x2F,0x62,0x3F,0x22,0x73,0x13,0xC9,0x82,0x7F,0x53
//,0x32,0x12,0xA0,0x7C,0x02,0x87,0x84,0x86,0x93,0x4E,0x68,0x46,0x8D,0xC3,0xDB,0xEC
//,0x9B,0xB7,0x89,0x92,0xA7,0xBE,0x3D,0xD8,0xEA,0x50,0x91,0xF1,0x33,0x38,0xE0,0xA9
//,0xA3,0x83,0xA1,0x1B,0xCF,0x06,0x95,0x07,0x9E,0xED,0xB9,0xF5,0x4C,0xC0,0xF4,0x2D
//,0x16,0xFA,0xB4,0x03,0x26,0xB3,0x90,0x4F,0xAB,0x65,0xFC,0xFE,0x14,0xF7,0xE3,0x94
//,0xEE,0xAC,0x8C,0x1A,0xDE,0xCB,0x28,0x40,0x7D,0xC8,0xC4,0x48,0x6B,0xDF,0xA5,0x52
//,0xE5,0xFB,0xD7,0x64,0xF9,0xF0,0xD3,0x5E,0x66,0x96,0x8F,0x1D,0x45,0x36,0xCC,0xC5
//,0x4D,0x9F,0xBF,0x0F,0xD1,0x08,0xEB,0x43,0x42,0x19,0xE7,0x99,0xA8,0x8E,0x58,0xC1
//,0x9A,0xD4,0x18,0x47,0xAA,0xAF,0xBC,0x5B,0xD5,0x11,0xD0,0xB0,0x70,0xBB,0x0D,0xBA
//}; //Liliput
//int sb[256]={
//112,130,44,236,179,39,192,229,228,133,87,53,234,12,174,65
//,35,239,107,147,69,25,165,33,237,14,79,78,29,101,146,189
//,134,184,175,143,124,235,31,206,62,48,220,95,94,197,11,26
//,166,225,57,202,213,71,93,61,217,1,90,214,81,86,108,77
//,139,13,154,102,251,204,176,45,116,18,43,32,240,177,132,153
//,223,76,203,194,52,126,118,5,109,183,169,49,209,23,4,215
//,20,88,58,97,222,27,17,28,50,15,156,22,83,24,242,34
//,254,68,207,178,195,181,122,145,36,8,232,168,96,252,105,80
//,170,208,160,125,161,137,98,151,84,91,30,149,224,255,100,210
//,16,196,0,72,163,247,117,219,138,3,230,218,9,63,221,148
//,135,92,131,2,205,74,144,51,115,103,246,243,157,127,191,226
//,82,155,216,38,200,55,198,59,129,150,111,75,19,190,99,46
//,233,121,167,140,159,110,188,142,41,245,249,182,47,253,180,89
//,120,152,6,106,231,70,113,186,212,37,171,66,136,162,141,250
//,114,7,185,85,248,238,172,10,54,73,42,104,60,56,241,164
//,64,40,211,123,187,201,67,193,21,227,173,244,119,199,128,158};//camellia
double LAT[256][256];
int innerproduct(int x,int y)
{
	int i;
	int s=0;
	for(i=0;i<8;i++)
	{
		s=s^(((x >> i) & 1)&((y >> i) & 1));
	}
	
	
	return s;
}
void getLAT()
{
	int i,j,x;
	int count=0;
	for(i=0;i<256;i++)
	{
		for(j=0;j<256;j++)
		{
			for(x=0;x<256;x++)
			{
				if((innerproduct(i,x)^innerproduct(j,sb[x]))==0)
				count++;
				if((innerproduct(i,x)^innerproduct(j,sb[x]))==1)
				count--;				
			}
			LAT[i][j]=count/256.0;
			count=0;
		}
	}
}
int num(int *a,int size)
{
	int i;
	int y=0;
	for(i=0;i<size;i++)
	{
		if(a[i])
		y++;
	}
	return y;
}
int check(int *a,int size)
{
	int n,i;
	n=num(a,size)+1;
	int y=0;
	for(i=0;i<8;i++)
	{
		y+=((n >> i) & 1);
	}
	if(y!=1)
	return 0;
	
	return y;
}

int main()
{
	int i,j,k,a1,a2;
	int tab1[256]={0},tab2[256]={0};
	getLAT();

	for(k=1;k<256;k++)
	{
		tab1[k]=1;
		a1=1;a2=2;
		while(a1<a2)
		{
			a1=a2;
			for(i=1;i<256;i++)
			{
				if(tab1[i])
				{
					for(j=1;j<256;j++)
					{
						if(LAT[i][j]!=0)
						tab2[j]=1;
					}
				}
			}
			for(i=0;i<256;i++)
			{
				tab1[i]=tab1[i]|tab2[i];		
			}
			a2=num(tab1,256);		
		}	
		if(check(tab1,256))
		{
			for(i=0;i<256;i++)
			{
				if(tab1[i])
				printf("%d ",i);
			}
			printf("\n");		
		}	

		memset(tab1,0,sizeof(tab1));
		memset(tab2,0,sizeof(tab2));	
	}

	
	return 0;
}
